--CÁC CÂU LỆNH TẠO USER VÀ GÁN QUYỀN
 
CREATE USER ThuongMaiDienTu IDENTIFIED BY TMDT_123456789;
ALTER USER ThuongMaiDienTu QUOTA unlimited ON SYSTEM;
GRANT CREATE SESSION, CONNECT, RESOURCE, DBA TO ThuongMaiDienTu;
GRANT ALL PRIVILEGES TO ThuongMaiDienTu;

--------------------------------------------------------------------------------------------------------------------------------
-- NHÓM CÁC BẢNG QUẢN TRỊ VÀ NGƯỜI DÙNG

CREATE TABLE ThuongMaiDienTu.Admins
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	username VARCHAR2(100) NOT NULL,
	fullname NVARCHAR2(200),
	gender VARCHAR2(15) DEFAULT 'male',
	"description" LONG,
	email VARCHAR2(100) NOT NULL,
	birthday DATE,
	avatar VARCHAR2(200),
	phone VARCHAR2(25),
	"password" VARCHAR2(200) NOT NULL,
	roleId INT NOT NULL,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_Admins PRIMARY KEY ("ID")
);

CREATE TABLE  ThuongMaiDienTu."Roles"
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" NVARCHAR2(100) NOT NULL,
	"description" LONG,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_Roles PRIMARY KEY ("ID")
 );
 
CREATE TABLE ThuongMaiDienTu.Customers
(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	username VARCHAR2(100) NOT NULL,
	fullname NVARCHAR2(200) DEFAULT 'Chua dat ten',
	gender VARCHAR2(15) DEFAULT 'male',
	"description" LONG,
	email VARCHAR2(100) NOT NULL,
	birthday DATE,
	avatar VARCHAR2(200),
	phone VARCHAR2(25),
	"password" VARCHAR2(200) NOT NULL,
	isActivated VARCHAR(10),
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
    
    CONSTRAINT PK_Customers PRIMARY KEY ("ID")
);
 
--------------------------------------------------------------------------------------------------------------------------------
-- NHÓM CÁC BẢNG THÔNG TIN SẢN PHẨM

CREATE TABLE ThuongMaiDienTu.Products
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" VARCHAR2(200),
	"description" LONG,
	price DECIMAL(19,4) NOT NULL,
	discount DECIMAL(19,4),
	quanty INT NOT NULL,
	productCategoryId NUMBER NOT NULL,
    productStateId NUMBER NOT NULL,
	supplierId NUMBER NOT NULL,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_Products PRIMARY KEY ("ID")
);
 
CREATE TABLE ThuongMaiDienTu.ProductStates
(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" NVARCHAR2(100) NOT NULL,
	"description" LONG,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_ProductStates PRIMARY KEY ("ID")
);
 
CREATE TABLE ThuongMaiDienTu.ProductCategories
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" NVARCHAR2(100) NOT NULL,
	"description" LONG,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_ProductCategories PRIMARY KEY ("ID")
);

CREATE TABLE ThuongMaiDienTu.Suppliers
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" NVARCHAR2(100) NOT NULL,
	"description" LONG,
	phone VARCHAR2(25),
	email VARCHAR2(100) NOT NULL,
	fax VARCHAR2(100),
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_Suppliers PRIMARY KEY ("ID")
);
 
CREATE TABLE ThuongMaiDienTu.ProductReviews
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	productId NUMBER NOT NULL,
	customerId NUMBER NOT NULL,
	rating FLOAT,
	"comment" LONG,
	parentId NUMBER,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_ProductReviews PRIMARY KEY ("ID")
);
 
CREATE TABLE ThuongMaiDienTu.ProductImages
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	productId NUMBER,
    isMainImage VARCHAR(10),
	"path" VARCHAR2(200),
	"source" BLOB,
    
    CONSTRAINT PK_ProductImages PRIMARY KEY ("ID")
);

--------------------------------------------------------------------------------------------------------------------------------
-- NHÓM CÁC BẢNG HÓA ĐƠN

CREATE TABLE ThuongMaiDienTu.Invoices
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	customerId NUMBER,
	orderDate TIMESTAMP NOT NULL,
	shipedDate TIMESTAMP,
	address1 NVARCHAR2(100), 
	address2 NVARCHAR2(100), 
	city NVARCHAR2(100),
	"state" NVARCHAR2(100),
	postalCode VARCHAR2(50),
	country NVARCHAR2(100),
	fee DECIMAL(19,4),
	paymentTypeId NUMBER NOT NULL,
	paidDate TIMESTAMP,
    invoiceStateId NUMBER NOT NULL, 
    totalMoney DECIMAL(19,4),
    
    CONSTRAINT PK_Invoices PRIMARY KEY ("ID")
);
 
CREATE TABLE ThuongMaiDienTu.InvoiceStates
(
    "ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" NVARCHAR2(100) NOT NULL,
	"description" LONG,
	createAt TIMESTAMP,
	updateAt TIMESTAMP,
	
	CONSTRAINT PK_InvoiceStates PRIMARY KEY ("ID")
);

CREATE TABLE ThuongMaiDienTu.InvoiceDetails
(
	invoiceId NUMBER,
	productId NUMBER,
	quanty INT NOT NULL,
	unitPrice DECIMAL(19,4) NOT NULL,
    intoMoney DECIMAL(19,4) NOT NULL,
    createAt TIMESTAMP,
	updateAt TIMESTAMP,
    
    CONSTRAINT PK_InvoiceDetails PRIMARY KEY (invoiceId, productId)
);

CREATE TABLE ThuongMaiDienTu.PaymentTypes
(
	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 INCREMENT BY 1,
	"name" VARCHAR(50) NOT NULL,
	"description" LONG,
    createAt TIMESTAMP,
	updateAt TIMESTAMP,
    
    CONSTRAINT PK_PaymentTypes PRIMARY KEY ("ID")
);

--------------------------------------------------------------------------------------------------------------------------------
-- BẢNG LƯU SỰ KIỆN HỆ THỐNG

CREATE TABLE ThuongMaiDienTu.StartupAudits 
(
  eventType  VARCHAR2(15),
  eventDate  DATE,
  eventTime  VARCHAR2(15)
);

--------------------------------------------------------------------------------------------------------------------------------
-- CÁC RÀNG BUỘC TOÀN VẸN

ALTER TABLE ThuongMaiDienTu.Admins
ADD CONSTRAINT FK_Admins_Roles FOREIGN KEY (roleId) REFERENCES ThuongMaiDienTu."Roles" ("ID")

ALTER TABLE ThuongMaiDienTu.Products
ADD (
    CONSTRAINT FK_Products_ProductCategories FOREIGN KEY (productCategoryId) REFERENCES ThuongMaiDienTu.ProductCategories ("ID"),
	CONSTRAINT FK_Products_Suppliers FOREIGN KEY (supplierId) REFERENCES ThuongMaiDienTu.Suppliers ("ID"),
    CONSTRAINT FK_Product_ProductStates FOREIGN KEY (productStateId) REFERENCES ThuongMaiDienTu.ProductStates ("ID"))

ALTER TABLE ThuongMaiDienTu.ProductReviews
ADD (
    CONSTRAINT FK_ProductReviews_Products FOREIGN KEY (parentId) REFERENCES ThuongMaiDienTu.Products ("ID"))
    
ALTER TABLE ThuongMaiDienTu.ProductImages
ADD CONSTRAINT FK_ProductImages_Products FOREIGN KEY (productId) REFERENCES ThuongMaiDienTu.Products ("ID")

ALTER TABLE ThuongMaiDienTu.Invoices
ADD (
    CONSTRAINT FK_Invoices_Customers FOREIGN KEY (customerId) REFERENCES ThuongMaiDienTu.Customers ("ID"),
    CONSTRAINT FK_Invoices_PaymentTypes FOREIGN KEY (paymentTypeId) REFERENCES ThuongMaiDienTu.PaymentTypes ("ID"),
    CONSTRAINT FK_Invoice_InvoiceStates FOREIGN KEY (invoiceStateId) REFERENCES ThuongMaiDienTu.InvoiceStates ("ID"))

ALTER TABLE ThuongMaiDienTu.InvoiceDetails
ADD (
    CONSTRAINT FK_InvoiceDetails_Invoices FOREIGN KEY (invoiceId) REFERENCES ThuongMaiDienTu.Invoices ("ID"),
    CONSTRAINT FK_InvoiceDetails_Products FOREIGN KEY (productId) REFERENCES ThuongMaiDienTu.Products ("ID"))

-- BỔ SUNG CÁC RÀNG BUỘC TOÀN VẸN KHÁC: UNIQUE CONSTRAINT, CHECK CONSTRAINT, DEFAULT CONSTRAINT.
--- UNIQUE CONSTRAINT

Alter table ThuongMaiDienTu.Customers 
Add constraint UNI_Customers unique(username);

Alter table ThuongMaiDienTu.Admins
Add constraint UNI_Admins unique(usernames);

Alter table ThuongMaiDienTu.ProductCategories
Add constraint UNI_ProductCategories unique("name");

Alter table ThuongMaiDienTu.ProductStates
Add constraint UNI_ProductStates unique("name");

Alter table ThuongMaiDienTu.InvoiceStates
Add constraint UNI_InvoiceStates unique("name");

--- CHECK CONSTRAINT

Alter table ThuongMaiDienTu.Customers
Add constraint CHK_Customers check (gender = 'female' or gender = 'male');

Alter table ThuongMaiDienTu.Admins
Add constraint CHK_Admins check (gender = 'female' or gender = 'male');

Alter table ThuongMaiDienTu.Products
Add constraint CHK_Products check (quanty > 0);

Alter table ThuongMaiDienTu.Invoices
Add constraint CHK_Invoices check (orderDate <= shipedDate);

--- DEFAULT CONSTRAINT

---------------------------------------------------------------------------------------------------------------------------------------------

--------------- INSERT TABLE CUSTOMERS -------------------- 
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (1, 'nguyenmailinh', 'Nguyen Mai Linh', 'female', NULL, 'NguyenMai123@gmail.com', NULL, NULL, '034555612', '666444', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (2, 'tranvantruong', 'Tran Van Truong', 'male', NULL, 'Tranvan123@gmail.com', NULL, NULL, '034555611', '666333', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (3, 'nguyennhatthao', 'Nguyen Nhat Thao', 'female', NULL, 'Nguyennhat123@gmail.com', NULL, NULL, '034555610', '666222', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (4, 'nguyenvanchinh', 'Nguyen Van Chinh', 'male', NULL, 'Nguyenvan123@gmail.com', NULL, NULL, '034555609', '666111', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (5, 'truongthithao', 'Truong Thi Thao', 'female', NULL, 'Truongthao123@gmail.com', NULL, NULL, '034555608', '666232', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (6, 'dangkieule', 'Dang Kieu Le', 'female', NULL, 'Dangkieu123@gmail.com', NULL, NULL, '034555607', '666345', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (7, 'nguyenphuongthao', 'Nguyen Phuong Thao', 'female', NULL, 'Nguyenphuong123@gmail.com', NULL, NULL, '034555606', '666567', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (8, 'tranquangvu', 'Tran Quang Vu', 'male', NULL, 'Tranquang123@gmail.com', NULL, NULL, '034555605', '666789', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (9, 'lethiha', 'Le Thi Ha', 'female', NULL, 'Lethi123@gmail.com', NULL, NULL, '034555601', '666123', 'YES', current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (10, 'vuongducchinh', 'Vuong Duc Chinh', 'male', NULL, 'Vuongduc123@gmail.com', NULL, NULL, '034555655', '666233', 'YES', current_timestamp, current_timestamp);
 

  --------------- INSERT TABLE ROLES -------------------- 
INSERT INTO ThuongMaiDienTu."Roles" ("ID", "name", "description", CREATEAT, UPDATEAT) 
    VALUES (1, 'Quan Tri Vien', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."Roles" ("ID", "name", "description", CREATEAT, UPDATEAT) 
    VALUES (2, 'Nhan Vien', NULL, current_timestamp, current_timestamp);


 --------------- INSERT TABLE ADMINS -------------------- 
INSERT INTO ThuongMaiDienTu."ADMINS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ROLEID, CREATEAT, UPDATEAT) 
    VALUES (1, 'hoangquynhnhu', 'Hoang Quynh Nhu', 'female', NULL, 'HoangNhu123@gmail.com', NULL ,'AVT', '034555612', '666101', 2, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."ADMINS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ROLEID, CREATEAT, UPDATEAT) 
    VALUES (2, 'phanchanh', 'Phan Xuân Chánh', 'male', '', 'phanchanh.oracle@gmail.com', NULL ,'AVT', '034555422', '666909', 1, current_timestamp, current_timestamp);


--------------- INSERT TABLE PAYMENTTYPES  --------------------
INSERT INTO ThuongMaiDienTu."PAYMENTTYPES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (1,'Momo', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PAYMENTTYPES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (2,'VNPay', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PAYMENTTYPES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (3,'Visa', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PAYMENTTYPES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (4,'Mastercard', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PAYMENTTYPES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (5,'American Express', NULL, current_timestamp, current_timestamp);


--------------- INSERT TABLE PRODUCTCATEGORIES --------------------
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (1, 'May tinh, lap top', NULL, current_timestamp, current_timestamp );
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (2, 'Dien thoai', NULL, current_timestamp, current_timestamp );
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (3, 'Linh kien dien tu', NULL, current_timestamp, current_timestamp );
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (4, 'Thoi trang', NULL, current_timestamp, current_timestamp );
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (5, 'Sach, do dung hoc tap', NULL, current_timestamp, current_timestamp );
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (6, 'Thuc pham', NULL, current_timestamp, current_timestamp );
INSERT INTO ThuongMaiDienTu."PRODUCTCATEGORIES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
    VALUES (7, 'Chua phan loai', NULL, current_timestamp, current_timestamp );

--------------- INSERT TABLE INVOICESTATES --------------------
INSERT INTO ThuongMaiDienTu."INVOICESTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (1, 'Dang xac nhan', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."INVOICESTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (2, 'Dang giao hang', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."INVOICESTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (3, 'Da bi huy', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."INVOICESTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (4, 'Da giao hang', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."INVOICESTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (5, 'Da bi hoan', NULL, current_timestamp, current_timestamp);


--------------- INSERT TABLE PRODUCTSTATES --------------------
INSERT INTO ThuongMaiDienTu."PRODUCTSTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (1, 'Het hang', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTSTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (2, 'Ngung ban', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTSTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (3, 'Sap co hang', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTSTATES" ("ID", "name", "description",CREATEAT,UPDATEAT) 
   VALUES (4, 'Dang ban', NULL, current_timestamp, current_timestamp);


--------------- INSERT TABLE SUPPLIERS --------------------
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (1,'IPM', 'Nha cung cap sach IPM', '0333193979', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (2,'HTX', 'Nha cung cap hang tieu dung', '0333193901', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (3,'LG', 'Nha cung cap Thiet Bi Dien Tu', '0333193902', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (4,'Bicicosmetics', 'Nha Cung Cap My Pham Han Quoc', '0333193903', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (5,'FASHION', 'Nha cung cap Quan Ao ', '0333193904', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (6,'AC', 'Nha cung Do Gia Dung', '0333193905', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (7,'ASIA', 'Nha cung San Pham Tieu Dung', '0333193906', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (8,'TL', 'Nha cung cap Dung Cu Hoc Tap', '0333193907', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (9,'ION', 'Nha cung cap Nuoc Khoang', '0333193908', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."SUPPLIERS" ("ID", "name", "description", PHONE, EMAIL, FAX, CREATEAT, UPDATEAT) 
    VALUES (10,'PNJ', 'Nha cung cap Trang Suc', '0333193999', 'online.ipmvn@gmail.com', NULL, current_timestamp, current_timestamp);

--------------- INSERT TABLE PRODUCTS -------------------- 
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (1, 'Mien Đat Hua - The Promised Neverland - Thư C?a Norman (Light Novel)', NULL, 80900, 12000, 112, 5, 4, 1, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (2, 'Kokomi Tom chua cay', NULL, 135000, 15000, 220, 6, 4, 2, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (3, ' Tivi LG 55 inch 4K - 55UP7550PTC', NULL, 16580900, 35000, 200, 7, 4, 3, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (4, 'Kem chong Nang La Roche-Posay ', NULL, 435000, 12000, 550, 4, 4, 4, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (5, 'Ao So Mi Nam Thiet Ke Hoa Tiet', NULL, 350000, 8000, 200, 4, 1, 5, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (6, 'Noi Chien Khong Dau Tefal EY201D15', NULL, 2240900, 9000, 500, 7, 4, 6, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (7, 'Bo Lau Nha CHEF and CHEF', NULL, 325600, 15000, 600, 7, 4, 7, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (8, 'But Bi Thien Long', NULL, 3000, 0, 500, 5, 4, 8, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (9, 'Nuoc Pocari bo sung ion', NULL, 15000, 1000, 11000, 6, 4, 9, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTS" ("ID", "name", "description", PRICE, DISCOUNT, QUANTY, PRODUCTCATEGORYID, PRODUCTSTATEID, SUPPLIERID, CREATEAT, UPDATEAT) 
    VALUES (10, 'Cau Bé Và Quái Vat - B? Manga Boxset Tron Bo 4 Tap', NULL, 134200, 18000, 345, 5, 4, 1, current_timestamp, current_timestamp);

--------------- INSERT TABLE PRODUCTREVIEWS --------------------

INSERT INTO ThuongMaiDienTu."PRODUCTREVIEWS" ("ID", PRODUCTID, CUSTOMERID ,RATING ,"comment", PARENTID, CREATEAT, UPDATEAT) 
    VALUES (1, 1, 1, '5', 'Sach rat hay, giao hang nhanh...', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTREVIEWS" ("ID", PRODUCTID, CUSTOMERID ,RATING ,"comment", PARENTID, CREATEAT, UPDATEAT)
    VALUES (2, 1, 3, NULL, 'Minh cung thay the', 1, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTREVIEWS" ("ID", PRODUCTID, CUSTOMERID ,RATING ,"comment", PARENTID, CREATEAT, UPDATEAT)
    VALUES (3, 4, 5, '5', 'Minh da nhan duoc hang, san pham Tot ', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTREVIEWS" ("ID", PRODUCTID, CUSTOMERID ,RATING ,"comment", PARENTID, CREATEAT, UPDATEAT)
    VALUES (4, 6, 6, NULL, 'Noi Chien sieu ngon , Uy Tin', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTREVIEWS" ("ID", PRODUCTID, CUSTOMERID ,RATING ,"comment", PARENTID, CREATEAT, UPDATEAT)
    VALUES (5, 10, 1, '5', 'Nhan rat dep, giao hang nhanh...', NULL, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."PRODUCTREVIEWS" ("ID", PRODUCTID, CUSTOMERID ,RATING ,"comment", PARENTID, CREATEAT, UPDATEAT)
    VALUES (6, 10, 2, NULL, 'Dong goi can than , giao hang nhanh , hang chat luong', NULL, current_timestamp, current_timestamp);

  --------------- INSERT TABLE INVOICES -------------------- 

INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (1, 1, current_timestamp, current_timestamp + 1, '248 Phan Dinh Phung - Phuong 1 - Quan Phu Nhuan ', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 12000, 1, current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (2, 2, current_timestamp, current_timestamp + 3, '153 Phan Boi Chau - Duc Co - Tinh Gia Lai ', NULL, 'Gia Lai', NULL, '61000', 'VIET NAM', 26000, 1 ,current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (3, 3, current_timestamp, current_timestamp + 1, '223 Chu Van An  - Phuong 3 - Quan Binh Thanh', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 17000, 2 ,current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (4, 4, current_timestamp, current_timestamp + 1, '23 Cong Hoa - Phuong 3 - Quan Tan Binh ', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 10000, 3, current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (5, 5, current_timestamp, current_timestamp + 2, '218 Huynh Van Banh - Phuong 1 - Lien Chieu', NULL, 'Da Nang', NULL, '50000', 'VIET NAM', 30000,4 ,current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (6, 6, current_timestamp, current_timestamp + 1, '48 Phan Xich Long - Phuong 10 - Quan Phu Nhuan ', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 10000, 4, current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (7, 7, current_timestamp, current_timestamp + 1, '10 Ly Thuong Kiet - Phuong 5 - quan 10', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 12000, 4, current_timestamp, 4 ,0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (8, 8, current_timestamp, current_timestamp + 1, '133 Hai Ba Trung - Phuong 1 -Quan 1  ', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 10000, 2, current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (9, 9, current_timestamp, current_timestamp + 2, '248 Dien Bien Phu - Phuong 5 - Lien Chieu ', NULL, 'Da Nang', NULL, '50000', 'VIET NAM', 30000, 3, current_timestamp, 4, 0);
INSERT INTO ThuongMaiDienTu."INVOICES" ("ID", CUSTOMERID, ORDERDATE, SHIPEDDATE, ADDRESS1, ADDRESS2, CITY, "state", POSTALCODE, COUNTRY, FEE, PAYMENTTYPEID, PAIDDATE, INVOICESTATEID, TOTALMONEY) 
    VALUES (10, 10, current_timestamp, current_timestamp + 2, '12 Tran Quan Toan - Phuong 4 -Quan 3 ', NULL, 'TP HCM', NULL, '70000', 'VIET NAM', 12000, 3, current_timestamp, 4, 0);

  --------------- INSERT TABLE INVOICEDETAILS -------------------- 
INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (1, 1, 3, 0, 0, current_timestamp, current_timestamp);
INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (2, 3, 1, 0, 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (3, 2, 2, 0, 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (4, 9, 3, 0, 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (5, 8, 15, 0, 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (6, 5, 2, 0, 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (7, 1, 2 ,0 , 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (8, 2, 3, 0, 0, current_timestamp, current_timestamp);
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (9, 3, 1, 0, 0, current_timestamp, current_timestamp );
 INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (10, 3, 3, 0, 0, current_timestamp, current_timestamp);

-- COMMIT ---

COMMIT WORK;
-- Cần chạy để lưu mọi thay đổi

---------------------------------------------------------------------------------------------------------------------------------------------
-- TRUY VẤN DỮ LIỆU

--+ Lấy các sản phẩm có trạng thái là 'Dang ban'
Select p.* from ThuongMaiDienTu.Products p, ThuongMaiDienTu.ProductStates ps
where p.productStateId = ps."ID" and ps."name" = 'Dang ban';

--+ Lấy các sản phẩm có loại là 'Sach, do dung hoc tap'
Select p.* from ThuongMaiDienTu.Products p, ThuongMaiDienTu.ProductCategories pc
where p.productCategoryId = pc."ID" and pc."name" = 'Sach, do dung hoc tap';

--+ Lấy các sản phẩm có tên chứa từ khóa Light Novel
Select * from ThuongMaiDienTu.Products where "name" like '%Light Novel%';

--+ Lấy 10 sản phẩm là 'Sach, do dung hoc tap' và sắp xếp giảm dần theo giá bán (giá gốc)
Select * from ThuongMaiDienTu.Products p where p.productCategoryId = 5 
order by p.price desc fetch first 10 row only;

--+ Cập nhật các sản phẩm có mô tả bằng NULL thành 'Khong co mo ta san pham'
update ThuongMaiDienTu.Products p set p."description" = 'Khong co mo ta san pham' 
where  p."description" is null;

--+ Lấy thông tin của những khách hàng chưa mua sản phẩm lần nào
Select c.* from ThuongMaiDienTu.Customers c where c."ID" not in (Select distinct i.customerId from ThuongMaiDienTu.Invoices i);

--+ Lấy thông tin của những khách hàng đã thực hiện mua sản phẩm
Select c.* from ThuongMaiDienTu.Customers c where c."ID" in (Select distinct i.customerId from ThuongMaiDienTu.Invoices i);

-- YỀU CẦU TUẦN 1
  
  
  
-- YÊU CẦU TUẦN 2
-- Thiết kế chức năng xem một số thông tin tùy chọn của process, instance, database, datafile

Select * from v$proccess;
Select * from v$instance;
Select * from v$database;
Select * from v$datafile;
-- Xem các chức năng này trong phần code ứng dụng

-- Kiểm tra một số thông tin của session: số lượng session, sid, serial, username, ứng dụng nào đang đăng nhập...; 

Select count(*) from v$session;
Select sid, serial#, username, program from v$session where type != 'BACKGROUND'; 
-- Xem các chức năng này trong phần code ứng dụng

-- Hủy một session đang đăng nhập;

alter system kill session 'sid, serial#';
--- sid, serial: truyền vào giá trị tương ứng. 
-- Xem các chức năng này trong phần code ứng dụng

-- Xem các process ứng với các session đang đăng nhập.

select s.sid, s.serial#, p.spid, s.username, s.program 
from v$session s, v$procedure p where p.addr = s.paddr and s.type != 'BACKGROUND';

-- Xem cho phép xem các table, tên tablespace tương ứng thuộc quyền sở hữu của một user nào đó được nhập vào

Select owner, table_name, tablespace_name 
from dba_tables where owner = 'THUONGMAIDIENTU';
-- Xem các chức năng này trong phần code ứng dụng

-- Hiển thị tất cả datafile, hiển thị chi tiết thông tin liên quan đến từng datafiles trong cơ sở dữ liệu: tên, id, tablespace chứa datafile đó

Select * from v$datafile;
Select * from dba_data_files;
Select file_name, file_id, tablespace_name from dba_data_files;
-- Xem các chức năng này trong phần code ứng dụng

-- Tạo tablespace trên một hoặc nhiều datafile do người dùng lựa chọn; 

create tablespace tablespace_demo1 datafile 'C:/FILES/datafiles/tablespace_demo1.DBF' size 20M;
create tablespace tablespace_demo2 datafile 
    'C:/FILES/datafiles/tablespace_demo2.DBF' size 20M,
    'C:/FILES/datafiles/tablespace_demo3.DBF' size 20M;
-- Xem các chức năng này trong phần code ứng dụng

-- Bổ sung datafile vào tablespace đã tồn tại
alter tablespace tablespace_demo2 add datafile 'C:/FILES/datafiles/tablespace_demo4.DBF' size 20M;
  
-- YÊU CẦU TUẦN 3
-- Xem thông tin liên quan đến một user nào đó được chỉ định, ít nhất phải có các thông tin cơ bản như: tên user, ngày tạo,
--- ngày hết hạn, trạng thái user, lần đăng nhập cuối, profile của user.

Select username, account_status, expiry_date, default_tablespace, created, profile, last_login
from dba_users;
-- Xem các chức năng này trong phần code ứng dụng

-- Thiết kế giao diện khi người dùng đăng nhập luôn có hiển thị thông tin tên người dùng, lần đăng nhập cuối cùng vào góc trên bên phải màn hình đăng nhập
-- Xem các chức năng này trong phần code ứng dụng

-- Kiểm tra các policy hiện có

Select * from dba_audit_policies;
-- Xem các chức năng này trong phần code ứng dụng

-- Thiết lập ít nhất 4 policy trên các bảng và các cột do sv tùy chọn phù hợp với đồ án

begin
    dbms_fga.add_policy(
        object_schema => 'ThuongMaiDienTu',
        object_name => 'Products',
        policy_name => 'fga_Products',
        statement_types => 'select, insert, update, delete'
    );
end;

begin
    dbms_fga.add_policy(
        object_schema => 'ThuongMaiDienTu',
        object_name => 'Invoices',
        policy_name => 'fga_Invoices',
        statement_types => 'select, insert, update, delete'
    );
end;

begin
    dbms_fga.add_policy(
        object_schema => 'ThuongMaiDienTu',
        object_name => 'InvoiceDetails',
        policy_name => 'fga_InvoiceDetails',
        statement_types => 'select, insert, update, delete'
    );
end;

begin
    dbms_fga.add_policy(
        object_schema => 'ThuongMaiDienTu',
        object_name => 'Customers',
        policy_name => 'fga_Customers',
        statement_types => 'select, insert, update, delete'
    );
end;
-- Xem các chức năng này trong phần code ứng dụng

-- Xuất báo cáo quá trình audit dữ liệu của các poliey có liên quan đã thiết lập

select * from dba_audit_trail;
select * from dba_audit_trail where object_schema = 'THUONGMAIDIENTU';
-- Xem các chức năng này trong phần code ứng dụng

-- Thiết lập audit liên quan đến một user nào đó

-- Cảnh báo tự động khi có sự truy cập hoặc thao tác quá mức quy định với dữ lấy được từ audit

-- YÊU CẦU TUẦN 4
-- Nhiều loại profile khác nhau trong csdl; cho phép người dùng tạo mới profile với tham số như thời gian sử dụng, 
--- số lần thay đôi password, khóa tài khoản nếu sai password n lần, thời gian tài khoản bị khóa khi nhập sai password

select * from dba_profiles;

create profile profile_demo1 
    connect_time 20
    session_per_user 4
    failed_login_attemps 10
    password_lock_time 1;

create profile profile_demo2 
    connect_time 15
    session_per_user 5
    failed_login_attemps 10
    password_lock_time 2;
-- Xem các chức năng này trong phần code ứng dụng

-- Cho phép người dùng tạo, sửa user với profile được chọn lựa trong danh sách profile đang có; cho phép xóa user;

Create user TMDT_QuanLy1 identified by TMDT_QuanLy1 
default tablespace USERS quota 50M on USERS profile profile_demo1;

Create user TMDT_QuanLy2 identified by TMDT_QuanLy2 
default tablespace USERS quota 50M on USERS profile profile_demo1;

Create user TMDT_NhanVien1 identified by TMDT_NhanVien1 
default tablespace USERS quota 50M on USERS profile profile_demo1;

Create user TMDT_NhanVien2 identified by TMDT_NhanVien2 
default tablespace USERS quota 50M on USERS profile profile_demo1;

Create user TMDT_NhanVien3 identified by TMDT_NhanVien3 
default tablespace USERS quota 50M on USERS profile profile_demo1; 

Create user TMDT_KhachHang1 identified by TMDT_KhachHang1 
default tablespace USERS quota 50M on USERS profile profile_demo1; 

-- Xem các chức năng này trong phần code ứng dụng

-- xóa profile

drop profile profile_demo2 cascade;
-- Xem các chức năng này trong phần code ứng dụng

-- Chức năng cho phép người dùng phân quyền theo các lựa chọn từ danh sách; cho phép thu hồi quyền user

grant create session to TMDT_QuanLy1;
grant select on ThuongMaiDienTu.Customers to TMDT_QuanLy1;
grant select on ThuongMaiDienTu.ProductCategories to TMDT_QuanLy1;
grant select on ThuongMaiDienTu.ProductImages to TMDT_QuanLy1;
grant select on ThuongMaiDienTu.ProductStates to TMDT_QuanLy1;
grant select on ThuongMaiDienTu.InvoiceStates to TMDT_QuanLy1;
grant select on ThuongMaiDienTu.PaymentTypes to TMDT_QuanLy1;
grant select, insert, update, delete on ThuongMaiDienTu.Suppliers to TMDT_QuanLy1;
grant select, insert, update, delete on ThuongMaiDienTu.Products to TMDT_QuanLy1;  
grant select, insert, update, delete on ThuongMaiDienTu.Invoices to TMDT_QuanLy1; 
grant select, insert, update, delete on ThuongMaiDienTu.InvoiceDetails to TMDT_QuanLy1;

grant create session to TMDT_NhanVien1;
grant select, update on ThuongMaiDienTu.Customers to TMDT_NhanVien1;
grant select on ThuongMaiDienTu.ProductCategories to TMDT_NhanVien1;
grant select, insert, update on ThuongMaiDienTu.ProductImages to TMDT_NhanVien1;
grant select on ThuongMaiDienTu.ProductStates to TMDT_NhanVien1;
grant select on ThuongMaiDienTu.InvoiceStates to TMDT_NhanVien1;
grant select on ThuongMaiDienTu.PaymentTypes to TMDT_NhanVien1;
grant select, insert on ThuongMaiDienTu.Suppliers to TMDT_NhanVien1;
grant select, insert, update on ThuongMaiDienTu.Products to TMDT_NhanVien1;  
grant select on ThuongMaiDienTu.Invoices to TMDT_NhanVien1; 
grant select on ThuongMaiDienTu.InvoiceDetails to TMDT_NhanVien1;

grant create session to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.Customers to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.ProductCategories to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.ProductImages to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.ProductStates to TMDT_KhachHang1
grant select on ThuongMaiDienTu.InvoiceStates to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.PaymentTypes to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.Suppliers to TMDT_KhachHang1;
grant select on ThuongMaiDienTu.Products to TMDT_KhachHang1;  
grant select on ThuongMaiDienTu.Invoices to TMDT_KhachHang1; 
grant select on ThuongMaiDienTu.InvoiceDetails to TMDT_KhachHang1;

-- Xem các chức năng này trong phần code ứng dụng

-- Chức năng tạo và xóa nhóm quyền;

Create role NhomQuanTri identified by TDMT_NhomQuanTri;
Create role NhomQuanLy identified by TDMT_NhomQuanLy;
Create role NhomNhanVien identified by TDMT_NhomNhanVien;
Create role NhomKhachHang identified by TDMT_NhomKhachHang;

Drop role NhomQuanTri;
-- Xem các chức năng này trong phần code ứng dụng

-- Chức năng phân quyền cho nhóm quyền 

Grant create session to NhomQuanLy;
grant select on ThuongMaiDienTu.Customers to NhomQuanLy;
grant select on ThuongMaiDienTu.ProductCategories to NhomQuanLy;
grant select on ThuongMaiDienTu.ProductImages to NhomQuanLy;
grant select on ThuongMaiDienTu.ProductStates to NhomQuanLy;
grant select on ThuongMaiDienTu.InvoiceStates to NhomQuanLy;
grant select on ThuongMaiDienTu.PaymentTypes to NhomQuanLy;
grant select, insert, update, delete on ThuongMaiDienTu.Suppliers to NhomQuanLy;
grant select, insert, update, delete on ThuongMaiDienTu.Products to NhomQuanLy;
grant select, insert, update, delete on ThuongMaiDienTu.Invoices to NhomQuanLy;
grant select, insert, update, delete on ThuongMaiDienTu.InvoiceDetails to NhomQuanLy;

Grant create session to NhomNhanVien;
grant select, update on ThuongMaiDienTu.Customers to NhomNhanVien;
grant select on ThuongMaiDienTu.ProductCategories to NhomNhanVien;
grant select, insert, update on ThuongMaiDienTu.ProductImages to NhomNhanVien;
grant select on ThuongMaiDienTu.ProductStates to NhomNhanVien;
grant select on ThuongMaiDienTu.InvoiceStates to NhomNhanVien;
grant select on ThuongMaiDienTu.PaymentTypes to NhomNhanVien;
grant select, insert on ThuongMaiDienTu.Suppliers to NhomNhanVien;
grant select, insert, update on ThuongMaiDienTu.Products to NhomNhanVien;
grant select on ThuongMaiDienTu.Invoices to NhomNhanVien;
grant select on ThuongMaiDienTu.InvoiceDetails to NhomNhanVien;

Grant create session to NhomKhachHang;
grant select on ThuongMaiDienTu.Customers to NhomKhachHang;
grant select on ThuongMaiDienTu.ProductCategories to NhomKhachHang;
grant select on ThuongMaiDienTu.ProductImages to NhomKhachHang;
grant select on ThuongMaiDienTu.ProductStates to NhomKhachHang;
grant select on ThuongMaiDienTu.InvoiceStates to NhomKhachHang;
grant select on ThuongMaiDienTu.PaymentTypes to NhomKhachHang;
grant select on ThuongMaiDienTu.Suppliers to NhomKhachHang;
grant select on ThuongMaiDienTu.Products to NhomKhachHang;
grant select on ThuongMaiDienTu.Invoices to NhomKhachHang;
grant select on ThuongMaiDienTu.InvoiceDetails to NhomKhachHang;


-- Xem các chức năng này trong phần code ứng dụng

grant NhomQuanLy to TMDT_QuanLy1, TMDT_QuanLy2;
grant NhomNhanVien to TMDT_NhanVien1, TMDT_NhanVien2, TMDT_NhanVien3;
grant NhomKhachHang to TMDT_KhachHang1;
-- Chưa xây dựng chức năng này trong code ứng dụng

-- YÊU CẦU TUẦN 5
-- Sao luu phục hồi dữ liệu với các kiểu sao lưu đa dạng
-- Export và import dữ liệu

-- Cài đặt các chức năng tìm kiếm, tổng hợp dữ liệu có sử dụng cursor sử dụng cursor ngầm định, tường minh, 
--- cursor có tham số, for update, where current of

---+ In ra tên sản phẩm, số hóa đơn có mua sản phẩm đó.

declare
    countInvoice number;
begin
    for prdt in (select p."ID", p."name" from ThuongMaiDienTu.Products p)
    loop
        begin
            select count(*) into countInvoice from ThuongMaiDienTu.InvoiceDetails invd where invd.productId = prdt."ID";
            dbms_output.put_line('Ten san pham: ' || prdt."name" || '-> So HD:' || countInvoice);
        end;
    end loop;
end;

---+ Thực hiện cập nhật giảm giá cho các sản phẩm theo các điều kiện: 
----+ nếu sản phẩm có giá lớn hơn 2000000 triệu thì giảm 5%;
----+ 2000000 > giá >= 1000000 thì giảm 3%;
----+ 1000000 > giá > 10000 thì giảm 1%;
----+ Còn lại giảm giá = 0;

Declare 
    sanPhamId ThuongMaiDienTu.Products."ID"%type;
    giaGoc ThuongMaiDienTu.Products.price%type;
    cursor curSP is select p."ID", p.price from ThuongMaiDienTu.Products p;
begin
    open curSP;
    loop
        fetch curSP into sanPhamId, giaGoc;
        exit when curSP%notfound;
        if(giaGoc > 2000000) then
            update ThuongMaiDienTu.Products p set p.discount = p.price * 0.05 where p."ID" = sanPhamId;
        elsif(giaGoc >= 1000000) then
            update ThuongMaiDienTu.Products p set p.discount = p.price * 0.03 where p."ID" = sanPhamId;
        elsif(giaGoc >= 10000) then
            update ThuongMaiDienTu.Products p set p.discount = p.price * 0.01 where p."ID" = sanPhamId;
        else 
            update ThuongMaiDienTu.Products p set p.discount = 0 where p."ID" = sanPhamId;
        end if;
    end loop;
    close curSP;
end;

---+ Thực hiện cập nhật giảm giá cho các sản phẩm theo các điều kiện: 
----+ nếu sản phẩm có giá lớn hơn 2000000 triệu thì giảm 5%;
----+ 2000000 > giá >= 1000000 thì giảm 3%;
----+ 1000000 > giá > 10000 thì giảm 1%;
----+ Còn lại giảm giá = 0;
----+ Có sử dụng FOR UPDATE, WHERE CURRENT OF;

Declare 
    giamGia ThuongMaiDienTu.Products.discount%type;
    cursor curSP3 is select p."ID", p.price from ThuongMaiDienTu.Products p for update of p.discount;
begin
    for r1 in curSP3 loop
        if(r1.price > 2000000) then
            giamGia := r1.price * 0.05;
        elsif(r1.price >= 1000000) then
            giamGia := r1.price * 0.03;
        elsif(r1.price >= 10000) then
            giamGia := r1.price * 0.01;
        else 
            giamGia := 0;
        end if;
        update ThuongMaiDienTu.Products p set p.discount = giamGia where current of curSP3;
    end loop;
end;

---+ Xuất ra tên, giá của sản phẩm đầu tiên có giá cao nhất. 

Declare
    sanPhamId ThuongMaiDienTu.Products."ID"%type;
    tenSanPham ThuongMaiDienTu.Products."name"%type;
    giaGoc ThuongMaiDienTu.Products.price%type;
    cursor curSP2 is select p."ID", p."name", p.price from ThuongMaiDienTu.Products p order by p.price desc;
begin
    open curSP2;
    fetch curSP2 into sanPhamId, tenSanPham, giaGoc;
    if not curSP2%notfound then
        dbms_output.put_line('SP co gia cao nhat: ' || sanPhamId || ' -> ' || tenSanPham || ' -> Gia: ' || giaGoc);
    end if;
    close curSP2;
end;

-- YÊU CẦU TUẦN 6
-- Cài đặt các chức năng truy vấn, tìm kiếm, cảnh báo có sử dụng các hàm có sẵn trong Oracle, các cấu trúc điều khiển
--- kết hợp với procedure, function, package

--- PROCEDURE
---+ Tạo procedure xem thông tin thống kê đơn giản: số lượng sản phẩm, số lượng thể loại, số lượng nhà cung cấp, số lượng khách hàng

Create or replace procedure proc_ThongKeSoLuong
as
    productNumber number;
    productCategoryNumber number;
    supplierNumber number;
    customerNumber number;
begin
    select count(*) into productNumber from ThuongMaiDienTu.Products;
    select count(*) into productCategoryNumber from ThuongMaiDienTu.ProductCategories;
    select count(*) into supplierNumber from ThuongMaiDienTu.Suppliers;
    select count(*) into customerNumber from ThuongMaiDienTu.Customers;
    
    dbms_output.put_line('SLSP:' || productNumber || ';SLTL:' || productCategoryNumber || ';SLNCC:' || supplierNumber || ';SLKH:' || customerNumber);
end proc_ThongKeSoLuong;

exec proc_ThongKeSoLuong;

---+ Cập nhật đơn giá và thành tiền cho hóa dơn chi tiết (InvoiceDetails)

Create or replace procedure proc_CapNhatDonGiaVaThanhTien
as begin
    update ThuongMaiDienTu.InvoiceDetails invd 
    set invd.unitPrice = (Select price - discount from ThuongMaiDienTu.Products p where p."ID" = invd.productId);
    
    update ThuongMaiDienTu.InvoiceDetails invd
    set invd.intoMoney = invd.unitPrice * invd.quanty;
end proc_CapNhatDonGiaVaThanhTien;

exec proc_CapNhatDonGiaVaThanhTien;

---+ Cập nhật tổng tiền cho hóa đơn (Invoices)

Create or replace procedure proc_CapNhatTongTien
as begin
    update ThuongMaiDienTu.Invoices i
    set i.totalMoney = (Select sum(invd.intoMoney) from ThuongMaiDienTu.InvoiceDetails invd where invd.invoiceId = i."ID");
end proc_CapNhatTongTien;

exec proc_CapNhatTongTien;

--+ Xuất ra thông tin của những sản phẩm thuộc danh mục (thể loại) có tên được truyền vào

Create or replace procedure proc_DanhSachSanPhamTheoDanhMuc(
    tenTheLoai in ThuongMaiDienTu.ProductCategories."name"%type, curResult out sys_refcursor)
as begin
    open curResult for select p."name", p.price, pc."name" as tenTL 
        from ThuongMaiDienTu.Products p, ThuongMaiDienTu.ProductCategories pc
        where p.productCategoryId = pc."ID" and pc."name" = tenTheLoai;
end proc_DanhSachSanPhamTheoDanhMuc;

var curResult refcursor;
exec proc_DanhSachSanPhamTheoDanhMuc('Sach, do dung hoc tap', :curResult);
print curResult;

--- FUNCTION
---+ Đếm số lượng sản phẩm theo tên danh mục (thể loại)

Create or replace function func_DemSLSanPhamTheoTenDanhMuc(tenDanhMuc in ThuongMaiDienTu.ProductCategories."name"%type)
return number
is countProduct number := 0;
begin
    select count(*) into countProduct from ThuongMaiDienTu.Products p, ThuongMaiDienTu.ProductCategories pc 
    where p.productCategoryId = pc."ID" and pc."name" = tenDanhMuc;
    return countProduct;
end;

select func_DemSLSanPhamTheoTenDanhMuc('Sach, do dung hoc tap') as SLSP from dual;

---+ Tính tổng tiền hóa đơn của hóa đơn có ID được truyền vào, và thực hiện cập nhật vào CSDL.

Create or replace function func_TinhTongTienHoaDonTheoHoaDonId(hoaDonId in ThuongMaiDienTu.Invoices."ID"%type)
return nvarchar2
is
    funcStatus nvarchar2(20) := '';
    totalMoney number := 0;
    countProduct number := 0;
begin
    Select count(*) into countProduct from ThuongMaiDienTu.Invoices i where i."ID" = hoaDonId;
    if (countProduct = 0) then
        funcStatus := 'Not exists';
    else
        begin
            update ThuongMaiDienTu.InvoiceDetails invd 
            set invd.unitPrice = (Select (p.price - p.discount) from ThuongMaiDienTu.Products p where p."ID" = invd.productId) 
            where invd.invoiceId = hoaDonId;
            
            update ThuongMaiDienTu.InvoiceDetails invd set invd.intoMoney = invd.unitPrice * invd.quanty
            where invd.invoiceId = hoaDonId;
            
            Select sum(invd.intoMoney) into totalMoney from ThuongMaiDienTu.InvoiceDetails invd where invd.invoiceId = hoaDonId; 
            
            update ThuongMaiDienTu.Invoices i set i.totalMoney =  totalMoney where i."ID" = hoaDonId;
            
            funcStatus := to_char(totalMoney, '999,999,999.00') || ' VND';
        end;
    end if;
    return funcStatus;
end func_TinhTongTienHoaDonTheoHoaDonId;

set serveroutput on;
declare
    tongTien nvarchar2(20);
begin
    tongTien := func_TinhTongTienHoaDonTheoHoaDonId(1);
    dbms_output.put_line('Tong tien la: ' || tongTien);
end;

---+ Tính tổng doanh thu của năm bất kỳ được nhập vào
Create or replace function func_TinhDoanhThuCuaNamBatKy(nam in number)
return number
is
    doanhThu number := 0;
    countInvoice number := 0;
begin
    select count(*) into countInvoice from ThuongMaiDienTu.Invoices i where extract(year from i.paidDate) = nam;
    if(countInvoice = 0) then
        doanhThu := 0;
    else
        begin
            select sum(totalMoney) into doanhThu from ThuongMaiDienTu.Invoices i where extract(year from i.paidDate) = nam;
        end;
    end if;
    return doanhThu;
end;

set serveroutput on;
declare
    doanhThu nvarchar2(20);
begin
    doanhThu := func_TinhDoanhThuCuaNamBatKy(2021);
    dbms_output.put_line('Doanh thu cua nam 2021 la: ' || doanhThu);
end;

---+ Thực hiện cập nhật giảm giá cho sản phẩm với các tham số truyền vào là: ID sản phẩm, phần trăm giảm giá.

Create or replace function func_GiamGiaSanPhamTheoId(sanPhamId in ThuongMaiDienTu.Products."ID"%type, 
    ptramGiamGia in number)
return nvarchar2
is
    funcStatus nvarchar2(20) := '';
    countProduct number := 0;
begin
     select count(*) into countProduct from ThuongMaiDienTu.Products p where p."ID" = sanPhamId;
     if(countProduct = 0) then
        funcStatus := 'Not Exists';
    else
        begin
            update ThuongMaiDienTu.Products p set p.discount = p.price * (ptramGiamGia / 100)
            where p."ID" = sanPhamId;
            funcStatus := 'Success';
        end;
    end if;
    return funcStatus;
end;

set serveroutput on;
declare
    trangThaiCNGiamGia nvarchar2(20);
begin
    trangThaiCNGiamGia := func_GiamGiaSanPhamTheoId(3, 10);
    if(trangThaiCNGiamGia = 'Success') then
        dbms_output.put_line('Cap nhat thanh cong');
    else
         dbms_output.put_line('Cap nhat thất bại');
    end if;
end;

--- PACKAGE

---+ Tạo package cho phép thêm và xóa danh mục (thể loại) sản phẩm.

Create or replace package body pkg_ProductCategories
as
    procedure addProductCategory(
        categoryId in ThuongMaiDienTu.ProductCategories."ID"%type,
        categoryName ThuongMaiDienTu.ProductCategories."name"%type,
        categoryDesc in ThuongMaiDienTu.ProductCategories."description"%type)
    is begin
        insert into ThuongMaiDienTu.ProductCategories ("ID", "name", "description", createAt, updateAt)
        values(categoryId, categoryName, categoryDesc, current_timestamp, current_timestamp);
    end addProductCategory;

    procedure deleteProductCategory(
        categoryId in ThuongMaiDienTu.ProductCategories."ID"%type)
    is begin
        delete from ThuongMaiDienTu.ProductCategories pc where pc."ID" = categoryId;
    end deleteProductCategory;
end pkg_ProductCategories;

exec pkg_ProductCategories.addProductCategory(8, 'May anh, quay phim', 'May anh - may quay phim cua cac hang Sony, Cannon,...');

-- YÊU CẦU TUẦN 7
-- Cài đặt đầy đủ các loại trigger: before, after, instead of, compound, sự kiện hệ thống (start, shutdown, log off)

---+ Kiểm tra khi thực hiện insert, update thì thuộc tính isActivated là có giá trị là YES hoặc NO
Create or replace trigger trg_KiemTraIsActivatedHopLe
before insert or update of isActivated on ThuongMaiDienTu.Customers
for each row
begin
    if(:new.isActivated != 'YES' and :new.isActivated != 'NO') then
        raise_application_error(-20898, 'Thuoc tinh isActivated phai co gia tri la YES hoac NO', true);
    end if;
end;

---Nhập dữ liệu sai
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (11, 'caotri', 'Nguyen Huynh Cao Tri', 'male', NULL, 'caotri883548@gmail.com', NULL, NULL, '0345345045', '634580934', 'CO', current_timestamp, current_timestamp);

---Nhập dữ liệu đúng 
INSERT INTO ThuongMaiDienTu."CUSTOMERS" ("ID", USERNAME, FULLNAME, GENDER, "description", EMAIL, BIRTHDAY, AVATAR, PHONE, "password", ISACTIVATED, CREATEAT, UPDATEAT) 
    VALUES (11, 'caotri', 'Nguyen Huynh Cao Tri', 'male', NULL, 'caotri883548@gmail.com', NULL, NULL, '0345345045', '634580934', 'YES', current_timestamp, current_timestamp);

---+ Cập nhật tổng tiền của hóa đơn sau khi thêm, cập nhật, xóa chi tiết hóa đơn.
Create or replace trigger trg_CapNhatHDvaHDCT
after insert or update or delete on ThuongMaiDienTu.InvoiceDetails
for each row
begin
    update ThuongMaiDienTu.Invoices i 
    set i.totalMoney = (Select sum(invd.intoMoney) from ThuongMaiDienTu.InvoiceDetails invd where invd.invoiceId = i."ID")
    where i."ID" = :new.invoiceId;
end;

---Nhập dữ liệu kiểm tra
INSERT INTO ThuongMaiDienTu."INVOICEDETAILS" (INVOICEID, PRODUCTID, QUANTY, UNITPRICE, INTOMONEY,CREATEAT,UPDATEAT) 
    VALUES (1, 3, 3, 0, 0, current_timestamp, current_timestamp);

---+ Instead of Trigger
---+ compound trigger

---+ Sự kiện hệ thống (start, shutdown, log off)

Create or replace trigger trg_Startup
after startup on database
begin
  insert into ThuongMaiDienTu.StartupAudits values ('STARTUP', sysdate, to_char(sysdate, 'hh24:mm:ss'));
end;

Create or replace trigger trg_Shuttdown
before shutdown on database
begin
  insert into ThuongMaiDienTu.StartupAudits values ('SHUTTDOWN', sysdate, to_char(sysdate, 'hh24:mm:ss'));
end;

Create or replace trigger trg_Logon
after logon on schema
begin
  insert into ThuongMaiDienTu.StartupAudits values ('LOGON: ' || user, sysdate, to_char(sysdate, 'hh24:mm:ss'));
end;

Create or replace trigger trg_Logoff
before logoff on schema
begin
  insert into ThuongMaiDienTu.StartupAudits values ('LOGOFF: ' || user, sysdate, to_char(sysdate, 'hh24:mm:ss'));
end;

-- Kết hợp trigger, thủ tục, hàm... để cài đặt chức năng hệ thống tự động tạo người dùng mới với profile mặc định,
--- cách thức đặt tên theo quy định khi nhập mới thông tin liên quan đến người dùng. Yêu cầu tên đăng nhập là tên + cácký tự đầu từ của họ lót. 
--- Ví dụ: khi nhập mới một sinh viên “nguyen thi lan”, hệ thông tự động tạo tài khoản đăng nhập “lannt”; 
--- nếu có 2 người trùng tên thì tự động chèn số thứ tự thêm vao sau nhu “lannt1”, “lannt2”

--Cài đặt phân quyền tự động cho người dùng được tạo mới

--Cài đặt tự động ghi nhận dữ liệu thêm, xóa, sửa của (một) bảng được xem là quan trọng

-- YÊU CẦU TUẦN 8
-- Cài đặt các giao tác đã phân tích trong bảng mô tả với 

-- Thiết kế chức năng tìm kiếm session, user đang block dữ liệu; chức năng chọn lựa và xóa các session nào đang block dữ liệu

Select sid, serial#, username from v$session where sid in (select blocking_session from v$session);

alter system kill session 'sid, serial#';
--- sid, serial: truyền vào giá trị tương ứng. 